//
//  ListTravelPackagesRouter.swift
//  Viajabessa
//
//  Created by Lucas Ferraço on 13/05/18.
//  Copyright (c) 2018 Lucas Ferraço. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol ListTravelPackagesRoutingLogic {
	func routeToBuyTravelPackage()
}

protocol ListTravelPackagesDataPassing {
	var dataStore: ListTravelPackagesDataStore? { get }
}

class ListTravelPackagesRouter: NSObject, ListTravelPackagesRoutingLogic, ListTravelPackagesDataPassing {
	weak var viewController: ListTravelPackagesViewController?
	var dataStore: ListTravelPackagesDataStore?
	
	// MARK: Routing
	
	func routeToBuyTravelPackage() {
		let storyboard = UIStoryboard(name: "BuyTravelPackage", bundle: nil)
		if let destinationVC = storyboard.instantiateViewController(withIdentifier: "BuyTravelPackageViewController") as? BuyTravelPackageViewController {
			var destinationDS = destinationVC.router?.dataStore
			if let unwrappedDestDS = destinationVC.router?.dataStore, let dataStore = self.dataStore {
				destinationDS = unwrappedDestDS
				self.passDataToBuyTravelPackage(source: dataStore, destination: &destinationDS!)
			}
			
			if let vc = self.viewController {
				self.navigateToBuyTravelPackage(source: vc, destination: destinationVC)
			}
		}
		
	}
	
	// MARK: Navigation
	
	func navigateToBuyTravelPackage(source: ListTravelPackagesViewController, destination: BuyTravelPackageViewController) {
	  source.navigationController?.pushViewController(destination, animated: true)
	}
	
	// MARK: Passing data
	
	func passDataToBuyTravelPackage(source: ListTravelPackagesDataStore, destination: inout BuyTravelPackageDataStore) {
		destination.selectedTravelPackage = source.selectedTravelPackage
	}
}
