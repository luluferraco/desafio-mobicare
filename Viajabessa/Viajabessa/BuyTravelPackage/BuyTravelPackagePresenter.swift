//
//  BuyTravelPackagePresenter.swift
//  Viajabessa
//
//  Created by Lucas Ferraço on 14/05/18.
//  Copyright (c) 2018 Lucas Ferraço. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol BuyTravelPackagePresentationLogic {
	func presentPackageInfo(_ response: BuyTravelPackage.DisplayPackageInfo.Response)
	func presentBuyResult(_ response: BuyTravelPackage.BuyPackage.Response)
}

class BuyTravelPackagePresenter: BuyTravelPackagePresentationLogic {
	weak var viewController: BuyTravelPackageDisplayLogic?
	
	// MARK: Present Package Info
	
	func presentPackageInfo(_ response: BuyTravelPackage.DisplayPackageInfo.Response) {
		let viewModel = BuyTravelPackage.DisplayPackageInfo.ViewModel(
			title: response.title,
			price: "R$" + response.value.toString,
			description: response.description,
			image: response.image
		)
		viewController?.displayPackageInfo(viewModel)
	}
	
	// MARK: Present buy result
	
	func presentBuyResult(_ response: BuyTravelPackage.BuyPackage.Response) {
		var title = ""
		var message = ""
		
		if let error = response.error {
			let tuple = self.getMessages(for: error)
			title = tuple.title
			message = tuple.message
		} else {
			title = "Boa viagem!"
			message = "Compra efetuada com sucesso!"
		}
		
		let viewModel = BuyTravelPackage.BuyPackage.ViewModel(
			success: (response.error == nil),
			resultTitleMessage: title,
			resultMessage: message
		)
		self.viewController?.displayBuyResult(viewModel)
	}
	
	func getMessages(for error: BuyTravelPackage.BuyError) -> (title: String, message: String) {
		var tuple = (title: "Ops", message: "")
		switch error {
		case .NoConnection:
			tuple.message = "Sem conexão. Para efetuar uma compra, por favor conecte seu dispositivo na internet e tente novamente."
		case .Failure:
			tuple.message = "Erro inesperado. Tente novamente mais tarde ou entre em contato conosco."
		}
		
		return tuple
	}
}
