//
//  BuyTravelPackageRouter.swift
//  Viajabessa
//
//  Created by Lucas Ferraço on 14/05/18.
//  Copyright (c) 2018 Lucas Ferraço. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol BuyTravelPackageRoutingLogic {
	func routeToListTravelPackages()
	func routeToAddCard()
}

protocol BuyTravelPackageDataPassing {
	var dataStore: BuyTravelPackageDataStore? { get }
}

class BuyTravelPackageRouter: NSObject, BuyTravelPackageRoutingLogic, BuyTravelPackageDataPassing {
	weak var viewController: BuyTravelPackageViewController?
	var dataStore: BuyTravelPackageDataStore?
	
	// MARK: Routing
	
	func routeToListTravelPackages() {
		self.viewController?.navigationController?.popViewController(animated: true)
	}
	
	func routeToAddCard() {
		let storyboard = UIStoryboard(name: "AddCard", bundle: nil)
		if let destinationVC = storyboard.instantiateViewController(withIdentifier: "AddCardViewController") as? AddCardViewController,
			let vc = self.viewController {
			var destinationDS = destinationVC.router?.dataStore
			if let unwrappedDestDS = destinationVC.router?.dataStore, let dataStore = self.dataStore {
				destinationDS = unwrappedDestDS
				self.passDataToAddCard(source: dataStore, destination: &destinationDS!)
			}
			
			self.navigateToAddCard(source: vc, destination: destinationVC)
		}
	}
	
	// MARK: Navigation
	
	func navigateToAddCard(source: BuyTravelPackageViewController, destination: AddCardViewController) {
		source.navigationController?.pushViewController(destination, animated: true)
	}
	
	// MARK: Passing data
	
	func passDataToAddCard(source: BuyTravelPackageDataStore, destination: inout AddCardDataStore) {
		destination.parentViewController = self.viewController
	}
}
